/*!
 * MIDI Events 0.1.0
 * 
 * @author Mikael Jorhult 
 * @license https://github.com/mikaeljorhult/midi-events MIT
*/
define("PubSub",[],function(){return{cache:{},trigger:function(e,t,n){if(this.cache[e]){var r=this.cache[e],i=r.length-1;for(i;i>=0;i-=1)r[i].apply(n||this,t||[])}},on:function(e,t){return this.cache[e]||(this.cache[e]=[]),this.cache[e].push(t),[e,t]},off:function(e,t){var n=e[0],r=this.cache[n].length-1;if(this.cache[n])for(r;r>=0;r-=1)this.cache[n][r]===e[1]&&(this.cache[n].splice(this.cache[n][r],1),t&&delete this.cache[n])}}}),define("midi-events",["PubSub"],function(e){function i(e){n.then(function(n){r=n,t.trigger("connected"),typeof e=="function"&&e()},h)}function s(){return r.inputs()}function o(){return r.outputs()}function u(e){f(e,l)}function a(e){f(e,function(){})}function f(e,t){var n=c(e),r=n.length,i;for(i=0;i<r;i++)n[i].onmidimessage=t}function l(e){console.log(e)}function c(e){var t=[],n=[],r=s(),i=r.length,o;typeof e=="number"?t=[e]:Object.prototype.toString.call(e)==="[object Array]"?t=e:typeof e=="string"&&e.toLowerCase()==="all"&&(n=s());if(t.length>0)for(o=0;o<i;o++)typeof t[o]=="number"&&t[o]<i&&n.push(r[t[o]]);return n}function h(e){console.log(e)}var t={},n=navigator.requestMIDIAccess(),r=null;return t.connect=i,t.inputs=s,t.outputs=o,t.listen=u,t.unlisten=a,t.on=e.on,t.off=e.off,t});