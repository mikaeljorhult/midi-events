/*!
 * MIDI Events 0.1.0
 * 
 * @author Mikael Jorhult 
 * @license https://github.com/mikaeljorhult/midi-events MIT
*/
define("PubSub",[],function(){var e={};return{trigger:function(t,n,r){if(e[t]){var i=e[t],s=i.length-1;for(s;s>=0;s-=1)i[s].apply(r||this,n||[])}},on:function(t,n){return e[t]||(e[t]=[]),e[t].push(n),[t,n]},off:function(t,n){var r=t[0],i=e[r].length-1;if(e[r])for(i;i>=0;i-=1)e[r][i]===t[1]&&(e[r].splice(e[r][i],1),n&&delete e[r])}}}),define("midi-events",["PubSub"],function(e){function i(t){n.then(function(n){r=n,e.trigger("connected"),typeof t=="function"&&t()},h)}function s(){return r.inputs()}function o(){return r.outputs()}function u(e){f(e,l)}function a(e){f(e,function(){})}function f(e,t){var n=c(e),r=n.length,i;for(i=0;i<r;i++)n[i].onmidimessage=t}function l(t){var n={type:"unsupported",channel:0};switch(!0){case t.data[0]<128:n.type="unsupported",n.channel=0;break;case t.data[0]<144:n.type="noteoff",n.channel=t.data[0]-128;break;case t.data[0]<160:n.type="noteon",n.channel=t.data[0]-144}n.note=t.data[1],n.value=t.data[2],e.trigger(n.type,[n]),e.trigger(n.type+":"+n.note,[n])}function c(e){var t=[],n=[],r=s(),i=r.length,o;typeof e=="number"?t=[e]:Object.prototype.toString.call(e)==="[object Array]"?t=e:typeof e=="string"&&e.toLowerCase()==="all"&&(n=s());if(t.length>0)for(o=0;o<i;o++)typeof t[o]=="number"&&t[o]<i&&n.push(r[t[o]]);return n}function h(e){console.log(e)}var t={},n=navigator.requestMIDIAccess(),r=null;return t.connect=i,t.inputs=s,t.outputs=o,t.listen=u,t.unlisten=a,t.on=e.on,t.off=e.off,t});